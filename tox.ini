[tox]
envlist =py36,py37,py38,lint,extra,mypy

[testenv]
deps=
    setuptools==34.3.1
    pytest>=4.0.0
    colorama
    pandas
commands=
    py.test -s -vv {posargs} {toxinidir}/tests/

[testenv:extra]
deps=
    ipython
    bpython
    ptpython
    requests
changedir={toxinidir}/tests/
setenv=
    TERM=linux
    TERMINFO=/etc/terminfo
commands=
    ptpython --interactive=interactive_test.py
    bpython -i interactive_test.py
    ipython interactive_test.py

[testenv:lint]
basepython=python3.6
deps = flake8==3.3.0
commands = flake8 --ignore=F841,F405,F403,W503 --max-complexity 11 \
           --max-line-length 88 pdir tests

[testenv:mypy]
basepython=python3.6
deps =
    pandas
    pytest>=4.0.0
    mypy
    pytest-mypy
commands = py.test -s --mypy {toxinidir}/tests/ --ignore={toxinidir}/tests/interactive_test.py

# Gernerate type info JSON file used by pyannotate, via pytest-annotate.
# See https://blog.kensho.com/pytest-annotate-is-now-open-source-5dd6f6d51d0f
# Since source files are already annotated, this should be rarely needed.
# If we do have some file(say a newly added module) that hasn't been annotated,
# Run the following commands to
# $ tox -e gen_type_info
# $ pyannotate --type-info annotate.json --py3 pdir/new_module.py -w
# Or annotate it manually, sometimes it's actually easier.
[testenv:gen_type_info]
basepython=python3.6
deps=
    pandas
    pytest-annotate
commands=
    py.test --annotate-output=./annotate.json -vv {posargs} {toxinidir}/tests/

[flake8]
max-line-length = 88
